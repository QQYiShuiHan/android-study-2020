package com.vincent.android_study_2020.lagou_android_advanced;

public class JavaBasicKnowledge {

    /**


     一、 JVM 与DVM 必知知识

     1. 程序运行时 内存到底是如何分配的

     堆  方法区  虚拟机栈 本地方法栈  程序计数器
     线程私有： 虚拟机栈 本地方法区 程序计数器 随着线程生而生，线程的死而死
     堆和方法区是线程共享的，所以要注意线程安全问题

     程序计数器是虚拟机中唯一一块没有规定任何内存溢出的区域

     程序计数器：是虚拟机中一块较小的内充空间，主要用于记录当前线程执行的位置

    虚拟机栈：
        线程私有，与线程的生命周期同步，同时也规定了两种异常情况
        1. StackOverflowError 当线程请求栈的深度超出虚拟机所允许的深度是抛出
        2. OutOfMemoryError   当Java虚拟机动态扩展到无法请足够内存时抛出
     JVM 是基于栈（虚拟机栈）的解释器执行的
     DVM 是基于寄存器解释器执行的
     JVM中的每个方法执行时，都会创建一个栈帧（Stack Frame）

     我们可以这样理解： 一个线程包含多个栈帧，而每个栈帧都包含 局部变量表、操作数栈、动态链接、返回地址





























     */




}
